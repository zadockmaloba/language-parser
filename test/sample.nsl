//NAISYS SERVERLANG

Core::Println("%{0} Running on MacOS", .{"Hello"});

Core::Println(RUNTIME_HTTP_BODY);

def test_func(var name: String = "test_func") : Float {
    Core::Println("Hello from %{0} func.", .{name});
    return 0.24;
}

const car: Class = {
    def init(type: String, color: String, sedan: Bool) : Void {

    }
}
var car_instance = car::init();
const car_instance_2 = car::init("Bugatti", "red", false);

var fault: CustomObject = {}

var int2: I16 = {}

var test_string: String = test_func();

Core::Println(test_string);

const @[/home]: Route = {
    .Header = "text/html";
    .Body = "<h1>Serverlang</h1>";

    Core::Println("Home path");
}

const @[/*]: Route = {

    const conn: Json = {
        "db_type":"QPSQL",
        "db_name":"postgres",
        "db_user":"postgres",
        "db_password":"postgres",
        "db_host":"localhost",
        "db_port":5432
    }

    var host = conn["db_host"];

    var test_params = RUNTIME_HTTP_PARAMS["test2"];

    Core::Println(host);

    Core::Println(test_params);

    var jsn_strng = Core::Json::Stringify(conn);
    Core::Println(jsn_strng);

    var dbh_1 = Core::Db::Open(conn);

    var qry = "CREATE TABLE test(a int, b int, c int)";

    Core::Println(qry);

    var mdl = Core::Db::Exec(dbh_1, qry);

    Core::Db::Close(dbh_1);

    .Header = "application/json";
    .Body = mdl;
}
